{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jordy/Documents/GitHub/webside/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport * as ga from \"@/lib/ga\";\nimport \"@/styles/prism-night-owl.css\";\nimport \"@/styles/fonts\";\nimport theme, { ThemeProvider } from \"@/styles/theme\";\n\nfunction MyApp({\n  Component,\n  pageProps,\n  err\n}) {\n  if (false && \"serviceWorker\" in navigator) {\n    window.navigator.serviceWorker.getRegistrations().then(registrations => {\n      registrations.forEach(r => r.unregister());\n    });\n  }\n\n  const router = useRouter();\n  useEffect(() => {\n    const handleRouteChange = url => {\n      ga.pageView(url);\n    };\n\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n    return () => {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, [router.events]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n      err: err\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/jordy/Documents/GitHub/webside/pages/_app.js"],"names":["useEffect","useRouter","ga","theme","ThemeProvider","MyApp","Component","pageProps","err","navigator","window","serviceWorker","getRegistrations","then","registrations","forEach","r","unregister","router","handleRouteChange","url","pageView","events","on","off"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,KAAKC,EAAZ,MAAoB,UAApB;AACA,OAAO,8BAAP;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,gBAArC;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAf,EAA8C;AAC5C,MAAI,SAAiC,mBAAmBC,SAAxD,EAAmE;AACjEC,IAAAA,MAAM,CAACD,SAAP,CAAiBE,aAAjB,CAA+BC,gBAA/B,GAAkDC,IAAlD,CAAwDC,aAAD,IAAmB;AACxEA,MAAAA,aAAa,CAACC,OAAd,CAAuBC,CAAD,IAAOA,CAAC,CAACC,UAAF,EAA7B;AACD,KAFD;AAGD;;AAED,QAAMC,MAAM,GAAGjB,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,iBAAiB,GAAIC,GAAD,IAAS;AACjClB,MAAAA,EAAE,CAACmB,QAAH,CAAYD,GAAZ;AACD,KAFD;;AAIAF,IAAAA,MAAM,CAACI,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCJ,iBAAxC;AAEA,WAAO,MAAM;AACXD,MAAAA,MAAM,CAACI,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCL,iBAAzC;AACD,KAFD;AAGD,GAVQ,EAUN,CAACD,MAAM,CAACI,MAAR,CAVM,CAAT;AAYA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEnB,KAAtB;AAAA,2BACE,QAAC,SAAD,kCAAeI,SAAf;AAA0B,MAAA,GAAG,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,eAAeH,KAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport * as ga from \"@/lib/ga\";\nimport \"@/styles/prism-night-owl.css\";\nimport \"@/styles/fonts\";\nimport theme, { ThemeProvider } from \"@/styles/theme\";\n\nfunction MyApp({ Component, pageProps, err }) {\n  if (typeof window !== \"undefined\" && \"serviceWorker\" in navigator) {\n    window.navigator.serviceWorker.getRegistrations().then((registrations) => {\n      registrations.forEach((r) => r.unregister());\n    });\n  }\n\n  const router = useRouter();\n\n  useEffect(() => {\n    const handleRouteChange = (url) => {\n      ga.pageView(url);\n    };\n\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n\n    return () => {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, [router.events]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Component {...pageProps} err={err} />\n    </ThemeProvider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}