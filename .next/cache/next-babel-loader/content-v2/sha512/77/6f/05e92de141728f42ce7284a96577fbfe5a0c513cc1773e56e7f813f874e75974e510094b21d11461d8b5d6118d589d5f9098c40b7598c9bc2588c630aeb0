{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/jordy/Documents/GitHub/webside/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jordy/Documents/GitHub/webside/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/jordy/Documents/GitHub/webside/components/ScrollToTop.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  bottom: 2rem;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: fixed;\\n  right: 2rem;\\n  transition: all 0.6s ease;\\n  visibility: hidden;\\n\\n  &:hover {\\n    border-color: var(--chakra-colors-gray-200);\\n    opacity: 0.8;\\n  }\\n\\n  opacity: \", \";\\n  visibility: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  opacity: 0;\\n  height: 0.1rem;\\n  left: 1px;\\n  position: absolute;\\n  top: 5px;\\n  width: 0.1rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRef, Fragment } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useIntersectionObserver } from \"@/lib/use-intersection-observer\";\nvar StyledDiv = styled.div(_templateObject());\n_c = StyledDiv;\nvar StyledSVG = styled.svg(_templateObject2(), function (props) {\n  return props.show && 1;\n}, function (props) {\n  return props.show && \"visible\";\n});\n_c2 = StyledSVG;\nexport var ScrollToTop = function ScrollToTop() {\n  _s();\n\n  var onScreen = useRef(null);\n\n  var _useIntersectionObser = useIntersectionObserver({\n    elementRef: onScreen\n  }),\n      _useIntersectionObser2 = _slicedToArray(_useIntersectionObser, 1),\n      isIntersecting = _useIntersectionObser2[0];\n\n  var handleClick = function handleClick() {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledDiv, {\n      ref: onScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(StyledSVG, {\n      show: !isIntersecting,\n      height: 50,\n      viewBox: \"0 0 963 963\",\n      width: 50,\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        fill: \"#FEC100\",\n        d: \"M481.5 963C747.4 963 963 747.4 963 481.5S747.4 0 481.5 0 0 215.6 0 481.5 215.6 963 481.5 963zm61.8-691.6l233.2 213.401c19.4 17.799 29.2 42.1 29.2 66.398 0 21.701-7.8 43.5-23.601 60.701-33.599 36.7-90.499 39.2-127.199 5.6L482.6 459.8 305.3 622.4c-36.6 33.6-93.6 31.1-127.2-5.5s-31.1-93.6 5.5-127.201L421.7 271.4c34.5-31.5 87.2-31.5 121.6 0z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ScrollToTop, \"Myf2uMRJacHRUtohLteZIDnKbMc=\", false, function () {\n  return [useIntersectionObserver];\n});\n\n_c3 = ScrollToTop;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledDiv\");\n$RefreshReg$(_c2, \"StyledSVG\");\n$RefreshReg$(_c3, \"ScrollToTop\");","map":{"version":3,"sources":["/Users/jordy/Documents/GitHub/webside/components/ScrollToTop.js"],"names":["useRef","Fragment","styled","useIntersectionObserver","StyledDiv","div","StyledSVG","svg","props","show","ScrollToTop","onScreen","elementRef","isIntersecting","handleClick","window","scrollTo","top","behavior"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,uBAAT,QAAwC,iCAAxC;AAEA,IAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV,mBAAf;KAAMD,S;AAQN,IAAME,SAAS,GAAGJ,MAAM,CAACK,GAAV,qBAcF,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,IAAN,IAAc,CAAzB;AAAA,CAdE,EAeC,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACC,IAAN,IAAc,SAAzB;AAAA,CAfD,CAAf;MAAMH,S;AAkBN,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAC/B,MAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAD,CAAvB;;AAD+B,8BAENG,uBAAuB,CAAC;AAAES,IAAAA,UAAU,EAAED;AAAd,GAAD,CAFjB;AAAA;AAAA,MAExBE,cAFwB;;AAI/B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBC,IAAAA,MAAM,CAACC,QAAP,CAAgB;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,QAAQ,EAAE;AAApB,KAAhB;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,GAAG,EAAEP;AAAhB;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,SAAD;AACE,MAAA,IAAI,EAAE,CAACE,cADT;AAEE,MAAA,MAAM,EAAE,EAFV;AAGE,MAAA,OAAO,EAAC,aAHV;AAIE,MAAA,KAAK,EAAE,EAJT;AAKE,MAAA,OAAO,EAAEC,WALX;AAAA,6BAOE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,CAAC,EAAC;AAFJ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CAzBM;;GAAMJ,W;UAEcP,uB;;;MAFdO,W","sourcesContent":["import { useRef, Fragment } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useIntersectionObserver } from \"@/lib/use-intersection-observer\";\n\nconst StyledDiv = styled.div`\n  opacity: 0;\n  height: 0.1rem;\n  left: 1px;\n  position: absolute;\n  top: 5px;\n  width: 0.1rem;\n`;\nconst StyledSVG = styled.svg`\n  bottom: 2rem;\n  cursor: pointer;\n  opacity: 0;\n  position: fixed;\n  right: 2rem;\n  transition: all 0.6s ease;\n  visibility: hidden;\n\n  &:hover {\n    border-color: var(--chakra-colors-gray-200);\n    opacity: 0.8;\n  }\n\n  opacity: ${(props) => props.show && 1};\n  visibility: ${(props) => props.show && \"visible\"};\n`;\n\nexport const ScrollToTop = () => {\n  const onScreen = useRef(null);\n  const [isIntersecting] = useIntersectionObserver({ elementRef: onScreen });\n\n  const handleClick = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  return (\n    <Fragment>\n      <StyledDiv ref={onScreen} />\n      <StyledSVG\n        show={!isIntersecting}\n        height={50}\n        viewBox=\"0 0 963 963\"\n        width={50}\n        onClick={handleClick}\n      >\n        <path\n          fill=\"#FEC100\"\n          d=\"M481.5 963C747.4 963 963 747.4 963 481.5S747.4 0 481.5 0 0 215.6 0 481.5 215.6 963 481.5 963zm61.8-691.6l233.2 213.401c19.4 17.799 29.2 42.1 29.2 66.398 0 21.701-7.8 43.5-23.601 60.701-33.599 36.7-90.499 39.2-127.199 5.6L482.6 459.8 305.3 622.4c-36.6 33.6-93.6 31.1-127.2-5.5s-31.1-93.6 5.5-127.201L421.7 271.4c34.5-31.5 87.2-31.5 121.6 0z\"\n        />\n      </StyledSVG>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}