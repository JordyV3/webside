{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jordy/Documents/GitHub/webside/components/ScrollToTop.js\";\nimport { useRef, Fragment } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useIntersectionObserver } from \"@/lib/use-intersection-observer\";\nconst StyledDiv = styled.div`\n  opacity: 0;\n  height: 0.1rem;\n  left: 1px;\n  position: absolute;\n  top: 5px;\n  width: 0.1rem;\n`;\nconst StyledSVG = styled.svg`\n  bottom: 2rem;\n  cursor: pointer;\n  opacity: 0;\n  position: fixed;\n  right: 2rem;\n  transition: all 0.6s ease;\n  visibility: hidden;\n\n  &:hover {\n    border-color: var(--chakra-colors-gray-200);\n    opacity: 0.8;\n  }\n\n  opacity: ${props => props.show && 1};\n  visibility: ${props => props.show && \"visible\"};\n`;\nexport const ScrollToTop = () => {\n  const onScreen = useRef(null);\n  const [isIntersecting] = useIntersectionObserver({\n    elementRef: onScreen\n  });\n\n  const handleClick = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledDiv, {\n      ref: onScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSVG, {\n      show: !isIntersecting,\n      height: 50,\n      viewBox: \"0 0 963 963\",\n      width: 50,\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        fill: \"#FEC100\",\n        d: \"M481.5 963C747.4 963 963 747.4 963 481.5S747.4 0 481.5 0 0 215.6 0 481.5 215.6 963 481.5 963zm61.8-691.6l233.2 213.401c19.4 17.799 29.2 42.1 29.2 66.398 0 21.701-7.8 43.5-23.601 60.701-33.599 36.7-90.499 39.2-127.199 5.6L482.6 459.8 305.3 622.4c-36.6 33.6-93.6 31.1-127.2-5.5s-31.1-93.6 5.5-127.201L421.7 271.4c34.5-31.5 87.2-31.5 121.6 0z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/jordy/Documents/GitHub/webside/components/ScrollToTop.js"],"names":["useRef","Fragment","styled","useIntersectionObserver","StyledDiv","div","StyledSVG","svg","props","show","ScrollToTop","onScreen","isIntersecting","elementRef","handleClick","window","scrollTo","top","behavior"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,uBAAT,QAAwC,iCAAxC;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAQA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcC,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAc,CAAE;AACxC,gBAAiBD,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAc,SAAU;AACnD,CAhBA;AAkBA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACY,cAAD,IAAmBT,uBAAuB,CAAC;AAAEU,IAAAA,UAAU,EAAEF;AAAd,GAAD,CAAhD;;AAEA,QAAMG,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,QAAP,CAAgB;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,QAAQ,EAAE;AAApB,KAAhB;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,GAAG,EAAEP;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,IAAI,EAAE,CAACC,cADT;AAEE,MAAA,MAAM,EAAE,EAFV;AAGE,MAAA,OAAO,EAAC,aAHV;AAIE,MAAA,KAAK,EAAE,EAJT;AAKE,MAAA,OAAO,EAAEE,WALX;AAAA,6BAOE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,CAAC,EAAC;AAFJ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzBM","sourcesContent":["import { useRef, Fragment } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useIntersectionObserver } from \"@/lib/use-intersection-observer\";\n\nconst StyledDiv = styled.div`\n  opacity: 0;\n  height: 0.1rem;\n  left: 1px;\n  position: absolute;\n  top: 5px;\n  width: 0.1rem;\n`;\nconst StyledSVG = styled.svg`\n  bottom: 2rem;\n  cursor: pointer;\n  opacity: 0;\n  position: fixed;\n  right: 2rem;\n  transition: all 0.6s ease;\n  visibility: hidden;\n\n  &:hover {\n    border-color: var(--chakra-colors-gray-200);\n    opacity: 0.8;\n  }\n\n  opacity: ${(props) => props.show && 1};\n  visibility: ${(props) => props.show && \"visible\"};\n`;\n\nexport const ScrollToTop = () => {\n  const onScreen = useRef(null);\n  const [isIntersecting] = useIntersectionObserver({ elementRef: onScreen });\n\n  const handleClick = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  return (\n    <Fragment>\n      <StyledDiv ref={onScreen} />\n      <StyledSVG\n        show={!isIntersecting}\n        height={50}\n        viewBox=\"0 0 963 963\"\n        width={50}\n        onClick={handleClick}\n      >\n        <path\n          fill=\"#FEC100\"\n          d=\"M481.5 963C747.4 963 963 747.4 963 481.5S747.4 0 481.5 0 0 215.6 0 481.5 215.6 963 481.5 963zm61.8-691.6l233.2 213.401c19.4 17.799 29.2 42.1 29.2 66.398 0 21.701-7.8 43.5-23.601 60.701-33.599 36.7-90.499 39.2-127.199 5.6L482.6 459.8 305.3 622.4c-36.6 33.6-93.6 31.1-127.2-5.5s-31.1-93.6 5.5-127.201L421.7 271.4c34.5-31.5 87.2-31.5 121.6 0z\"\n        />\n      </StyledSVG>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}